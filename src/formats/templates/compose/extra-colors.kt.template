//
// Copyright 2020 Target Corporation. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License").
// You may not use this file except in compliance with the License.
// A copy of the License is located at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

package <%= file.packageName %>

import androidx.compose.runtime.Stable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.setValue
import androidx.compose.ui.graphics.Color
<%= options.import.map(function(item) {
    return 'import ' + item
  }).join('\n') %>
@Stable
class <%= file.className %>(
<%= allProperties.map(function(prop) {
    return '    ' + prop.name + ': Color,'
  }).join('\n')
%>
    isLight: Boolean,
) {
    var isLight by mutableStateOf(isLight)
        private set
<%= allProperties.map(function(prop) {
  let comment = "";
  if (prop.description) {
    comment = `    /** ${prop.description} */\n`
  }
  return comment + '    var ' + prop.name + ' by mutableStateOf(' + prop.name + ')\n        private set'
}).join('\n' ) %>

    fun copy(
<%= allProperties.map(function(prop) {
    return '        ' + prop.name + ': Color = this.' + prop.name + ','
  }).join('\n')
%>
        isLight: Boolean = this.isLight,
    ) = <%= file.className %>(
<%= allProperties.map(function(prop) {
    return '        ' + prop.name + ' = ' + prop.name + ','
  }).join('\n')
%>
        isLight = isLight,
    )

    fun updateColorsFrom(other: <%= file.className %>) {
<%= allProperties.map(function(prop) {
    return '        ' + prop.name + ' = other.' + prop.name + ','
  }).join('\n')
    %>
        isLight = other.isLight
    }
}
